import taichi as ti
import numpy as np
# 初始化 Taichi
ti.init(arch=ti.cpu)  # 或者使用 ti.gpu

# 假设 points 数组包含了你的三维坐标,是个列表
points = [
    [1.0, 2.0, 3.0],
    [4.0, 5.0, 6.0],
    [7.0, 8.0, 9.0],
    # 添加更多点...
]
pos = np.random.normal(0,1,size=(100,3))/10
scale = 10.0
# 转换点为 Taichi 矩阵
num_points = len(pos)
points_ti = ti.Vector.field(3, dtype=ti.f32, shape=num_points)
# pos[1] + np.random.normal(0,1,size=(1,3))
# pos[1,0] += pos[1,0] + np.random.normal(0,1)
# pos[1,1] += pos[1,1] + np.random.normal(0,1)
# pos[1,2] += pos[1,2] + np.random.normal(0,1)
for i in range(num_points):
    #points_ti[i] = points[i]
    points_ti[i] = pos[i]
'''
print(points_ti)
print(pos)
i = 1
print(pos[i])
pos[i,0] += pos[i,0] + 0.01
pos[i,1] += pos[i,1] + 0.01
pos[i,2] += pos[i,2] + 0.01
print(pos[i])
i = 2
print(pos[i])
x1 = pos[i,0]
x2 = pos[i,1] 
x3 = pos[i,2]
x1 += 0.01
x2 += 0.01
x3 += 0.01
pos[i,0] = x1
pos[i,1] = x2 
pos[i,2] = x3
print(pos[i])
print(points_ti[i])
points_ti[i] = pos[i]
points_ti[i] = pos[i]
'''
ball_radius = 0.01
# 创建一个场景
window = ti.ui.Window("Taichi Cloth Simulation on GGUI", (1024, 1024),
                      vsync=True)
canvas = window.get_canvas()
canvas.set_background_color((1, 1, 1))
scene = ti.ui.Scene()
camera = ti.ui.Camera()

while window.running:


    camera.position(0.0, 0.0, 3)
    camera.lookat(0.0, 0.0, 0)
    scene.set_camera(camera)

    scene.point_light(pos=(0, 1, 2), color=(1, 1, 1))
    scene.ambient_light((0.5, 0.5, 0.5))


    # Draw a smaller ball to avoid visual penetration
    scene.particles(points_ti, radius=ball_radius , color=(0.5, 0.42, 0.8))
    canvas.scene(scene)
    
    for i in range(num_points):
        x1 = pos[i,0]
        x2 = pos[i,1] 
        x3 = pos[i,2]
        x1 += np.random.normal(0,000.1)
        x2 += np.random.normal(0,000.1)
        x3 += np.random.normal(0,000.1)
        pos[i,0] = x1
        pos[i,1] = x2 
        pos[i,2] = x3
        points_ti[i] = pos[i]
    
    '''
    for i in range(num_points):
        pos[i,0] += pos[i,0] + np.random.normal(0,000.1)
        pos[i,1] += pos[i,1] + np.random.normal(0,000.1)
        pos[i,2] += pos[i,2] + np.random.normal(0,000.1)
        points_ti[i] = pos[i]
    '''
    window.show()
