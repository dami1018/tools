# 完整程序
# 程序包的导入
import networkx as nx
import pandas as pd
from pypinyin import pinyin, lazy_pinyin
import plotly.graph_objs as go
import plotly.offline as pyo
# 数据导入和处理
path = r"D:\trading\custom.xlsx"
data = pd.read_excel(path,sheet_name="Sheet1")
re = data[data['客户类型'] !='个人'].reset_index()
# 图建立
G = nx.Graph()
for index, row in re.iterrows():
    G.add_edge(row['客户经理'], row['客户名称'])
pos = nx.spring_layout(G)
#建立边的对象，并赋值
edge_trace = go.Scatter(
    x=[],
    y=[],
    line=dict(width=0.5, color='#888'),
    hoverinfo='none',
    mode='lines')

for edge in G.edges():
    # print(edge,edge[0])
    x0, y0 = pos[edge[0]]
    x1, y1 = pos[edge[1]]
    edge_trace['x'] += (x0, x1, None)
    edge_trace['y'] += (y0, y1, None)
#建立点对象，并赋值
#由于plotly在中文显示方面存在问题，所以先将中文转化为拼音，并建立拼音的索引，然后用拼音画图
node_trace = go.Scatter(
    x=[],
    y=[],
    text=[],
    mode='markers+text',  # 添加 'text' 模式
    hoverinfo='text',
    marker=dict(
        showscale=True,
        colorscale='YlGnBu',
        reversescale=True,
        color=[],
        size=10,
        colorbar=dict(
            thickness=15,
            title='Node Connections',
            xanchor='left',
            titleside='right'
        ),
        line=dict(width=2)))

replace = {}
for node in G.nodes:
    replace[node] = ''.join(lazy_pinyin(node))
for node in G.nodes():
    x, y = pos[node]
    node_trace['x'] += (x,)
    node_trace['y'] += (y,)
    node_trace['text'] += (''.join(lazy_pinyin(node)),)
# 将节点周边信息导入节点图
for node, adjacencies in enumerate(G.adjacency()):
    node_trace['marker']['color'] += (len(adjacencies[1]),)
    node_info = '# of connections: ' + str(len(adjacencies[1]))
    node_trace['text'] += (node_info,)

# 绘制图像
# 创建图表
fig = go.Figure(data=[edge_trace, node_trace],
                layout=go.Layout(
                    title='<br>Network graph made with Python',
                    titlefont=dict(size=16),
                    showlegend=False,
                    hovermode='closest',
                    margin=dict(b=20, l=5, r=5, t=40),
                    annotations=[dict(
                        text="Python code: <a href='https://plotly.com/python/network-graphs/'> https://plotly.com/python/network-graphs/</a>",
                        showarrow=False,
                        xref="paper", yref="paper",
                        x=0.005, y=-0.002)],
                    xaxis=dict(showgrid=False, zeroline=False, showticklabels=False),
                    yaxis=dict(showgrid=False, zeroline=False, showticklabels=False)))

# 存储并显示图表
file_name = 'guanxi.html'
pyo.plot(fig, filename=file_name)
# 将拼音内容替换为中文  
with open(f'C:\\Users\\csc05176\\{file_name}', 'rb') as file:
    raw_data = file.read()
    result = chardet.detect(raw_data)
    encoding = result['encoding']
with open(f'C:\\Users\\csc05176\\{file_name}', 'r', encoding=encoding) as file:
    html_content = file.read()
for node in G.nodes:
    old_string = replace[node]  # 要替换的旧字符串
    new_string = node  # 替换后的新字符串
    html_content = html_content.replace(old_string, new_string)
    
with open(f'C:\\Users\\csc05176\\{file_name}', 'w', encoding='utf-8') as file:
    file.write(html_content)
